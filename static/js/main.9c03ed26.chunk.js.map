{"version":3,"sources":["redux/types.js","redux/actions.js","Header/Header.js","Main/Playground/Playground.js","utils.js","Main/ResultTable/ResultTable.js","Main/Main.js","Modal/Modal.js","App/App.js","redux/rootReducer.js","index.js"],"names":["GAME_STATUS","POINT_INCREASE","TIME_LEFT","GAME_RESET","GAME_PLAYER","MODAL_OPEN_STATUS","CHANGE_MAIN_CONTENT","gameStatus","data","type","gameReset","Header","state","isNewGame","this","props","isGameStarted","timeLeft","points","time","setState","timeIsUp","setTimeout","tick","modalOpenStatus","isModalOpen","mainContent","className","onClick","onNewGame","onStartGame","value","changeMainContent","onMainContent","gameStartButtons","gameOrResults","timeLeftOutput","React","Component","mapDispatchToProps","connect","Playground","cubes","playground","createRef","generateCubes","prevState","amountCubes","i","colorCube","getColorStyle","push","cube","getCube","cubeSize","width","current","offsetWidth","height","offsetHeight","color","getPlaygroundSizes","cubeStyles","left","getRandom","top","backgroundColor","style","onDeleteCube","generateNewCubes","scoreÐ¡alculation","pointIncrease","filter","Math","round","random","minCubes","maxCubes","floor","length","amountNewCubes","getAmountNewCubes","newCubes","concat","ref","map","mapDispatchToState","getLocalStorage","key","JSON","parse","localStorage","getItem","ResultTable","class","player","index","scope","nickname","useState","onModalClose","id","role","data-dismiss","aria-label","aria-hidden","htmlFor","placeholder","onChange","e","target","prevLocalStorage","setItem","stringify","setLocalStorage","console","log","initialState","store","createStore","action","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c03ed26.chunk.js","sourcesContent":["export const GAME_STATUS = 'GAME_STATUS';\r\nexport const POINT_INCREASE = 'POINT_INCREASE';\r\nexport const TIME_LEFT = 'TIME_LEFT';\r\nexport const GAME_RESET = 'GAME_RESET';\r\nexport const GAME_PLAYER = 'GAME_PLAYER';\r\nexport const MODAL_OPEN_STATUS = 'MODAL_OPEN_STATUS';\r\nexport const CHANGE_MAIN_CONTENT = 'CHANGE_MAIN_CONTENT';\r\n","import {\r\n  GAME_STATUS,\r\n  POINT_INCREASE,\r\n  GAME_RESET,\r\n  TIME_LEFT,\r\n  GAME_PLAYER,\r\n  MODAL_OPEN_STATUS,\r\n  CHANGE_MAIN_CONTENT\r\n} from './types';\r\n\r\nexport function gameStatus(data) {\r\n  return {\r\n    type: GAME_STATUS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function pointIncrease(data) {\r\n  return {\r\n    type: POINT_INCREASE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function timeLeft(data) {\r\n  return {\r\n    type: TIME_LEFT,\r\n    data\r\n  };\r\n}\r\n\r\nexport function gameReset(data) {\r\n  return {\r\n    type: GAME_RESET,\r\n    data\r\n  };\r\n}\r\n\r\nexport function gamePlayer(data) {\r\n  return {\r\n    type: GAME_PLAYER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function modalOpenStatus(data) {\r\n  return {\r\n    type: MODAL_OPEN_STATUS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function changeMainContent(data) {\r\n  return {\r\n    type: CHANGE_MAIN_CONTENT,\r\n    data\r\n  };\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {gameStatus, gameReset, timeLeft, modalOpenStatus, changeMainContent} from '../redux/actions';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {isNewGame: false};\r\n  }\r\n\r\n  onStartGame() {\r\n    this.props.gameStatus({isGameStarted: true});\r\n    this.timeLeft();\r\n  }\r\n\r\n  onNewGame() {\r\n    const gameReset = {\r\n      points: 0,\r\n      time: 60\r\n    };\r\n    this.props.gameReset(gameReset);\r\n    this.setState({isNewGame: true});\r\n  }\r\n\r\n  timeLeft() {\r\n    const {isNewGame} = this.state;\r\n    if (isNewGame) {\r\n      this.setState({isNewGame: false});\r\n      return this.timeLeft();\r\n    }\r\n    const isGameEnd = !this.props.time;\r\n    if (isGameEnd) {\r\n      return this.timeIsUp();\r\n    }\r\n    const oneSecond = 1000;\r\n    setTimeout(() => this.tick(), oneSecond);\r\n  }\r\n\r\n  timeIsUp() {\r\n    const gameReset = {\r\n      time: 60,\r\n      isGameStarted: false\r\n    };\r\n    this.props.gameReset(gameReset);\r\n    this.props.modalOpenStatus({isModalOpen: true});\r\n  }\r\n\r\n  tick() {\r\n    this.props.timeLeft({time: this.props.time - 1});\r\n    return this.timeLeft();\r\n  }\r\n\r\n  gameStartButtons() {\r\n    if (!this.props.mainContent) return;\r\n    return this.props.isGameStarted ? (\r\n      <button type=\"button\" className=\"buttons-new-game btn btn-primary\" onClick={() => this.onNewGame()}>\r\n        New game\r\n      </button>\r\n    ) : (\r\n      <button type=\"button\" className=\"buttons-start btn btn-success\" onClick={() => this.onStartGame()}>\r\n        Start\r\n      </button>\r\n    );\r\n  }\r\n\r\n  onMainContent(value) {\r\n    this.props.changeMainContent({mainContent: value});\r\n  }\r\n\r\n  gameOrResults() {\r\n    if (this.props.isGameStarted) return;\r\n    return this.props.mainContent ? (\r\n      <button type=\"button\" className=\"buttons-start btn btn-success\" onClick={() => this.onMainContent(false)}>\r\n        Results\r\n      </button>\r\n    ) : (\r\n      <button type=\"button\" className=\"buttons-new-game btn btn-primary\" onClick={() => this.onMainContent(true)}>\r\n        Game\r\n      </button>\r\n    );\r\n  }\r\n\r\n  timeLeftOutput() {\r\n    if (this.props.time > 59) return `01:00`;\r\n    return this.props.time < 10 ? `00:0${this.props.time}` : `00:${this.props.time}`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Cubes game</h1>\r\n        <div className=\"header__game-control\">\r\n          <div className=\"header__buttons buttons\">\r\n            {this.gameStartButtons()}\r\n            {this.gameOrResults()}\r\n          </div>\r\n          <div className=\"header__game-info info\">\r\n            <div className=\"info__points\">\r\n              <span>Points</span>\r\n              <div className=\"info__output form-control\">{this.props.points}</div>\r\n            </div>\r\n            <div className=\"info__time\">\r\n              <span>Time left</span>\r\n              <div className=\"info__output form-control\">{this.timeLeftOutput()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  gameStatus,\r\n  gameReset,\r\n  timeLeft,\r\n  modalOpenStatus,\r\n  changeMainContent\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport './Playground.css';\r\nimport {connect} from 'react-redux';\r\nimport {pointIncrease, gameStatus} from '../../redux/actions';\r\n\r\nclass Playground extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cubes: []\r\n    };\r\n\r\n    this.playground = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cubes = this.generateCubes();\r\n    this.setState((prevState) => ({...prevState, cubes}));\r\n  }\r\n\r\n  generateCubes(amountCubes = 6) {\r\n    let cubes = [];\r\n    for (let i = 0; i < amountCubes; i++) {\r\n      const colorCube = this.getColorStyle();\r\n\r\n      cubes.push({colorCube, cube: this.getCube(colorCube)});\r\n    }\r\n    return cubes;\r\n  }\r\n\r\n  getPlaygroundSizes(cubeSize = 40) {\r\n    return {\r\n      width: this.playground.current.offsetWidth - cubeSize,\r\n      height: this.playground.current.offsetHeight - cubeSize\r\n    };\r\n  }\r\n\r\n  getCube(color) {\r\n    const {width, height} = this.getPlaygroundSizes();\r\n    const cubeStyles = {\r\n      left: this.getRandom(width),\r\n      top: this.getRandom(height),\r\n      backgroundColor: `#${color}`\r\n    };\r\n    return (\r\n      <div\r\n        key={color}\r\n        className=\"cube\"\r\n        style={cubeStyles}\r\n        onClick={() => {\r\n          this.onDeleteCube(color);\r\n          this.generateNewCubes();\r\n          this.scoreÐ¡alculation();\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n  scoreÐ¡alculation() {\r\n    this.props.pointIncrease({points: this.props.points + 1});\r\n  }\r\n\r\n  onDeleteCube(color) {\r\n    this.setState((prevState) => ({...prevState, cubes: prevState.cubes.filter((cube) => cube.colorCube !== color)}));\r\n  }\r\n\r\n  getColorStyle() {\r\n    const sixDigitNumber = 1000000;\r\n    return this.getRandom(sixDigitNumber);\r\n  }\r\n\r\n  getRandom(value) {\r\n    return Math.round(Math.random() * value);\r\n  }\r\n\r\n  getAmountNewCubes(minCubes = 1, maxCubes = 3) {\r\n    return Math.floor(Math.random() * maxCubes + minCubes);\r\n  }\r\n\r\n  generateNewCubes() {\r\n    const amountCubes = this.state.cubes.length;\r\n    const isEnoughCubes = amountCubes > 3;\r\n    if (isEnoughCubes) {\r\n      return;\r\n    }\r\n\r\n    const amountNewCubes = this.getAmountNewCubes(1, 3);\r\n\r\n    const newCubes = this.generateCubes(amountNewCubes);\r\n    this.setState((prevState) => ({...prevState, cubes: newCubes.concat(prevState.cubes)}));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"playground\" ref={this.playground}>\r\n        {this.props.isGameStarted && this.state.cubes.map((cube) => cube.cube)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = {\r\n  pointIncrease,\r\n  gameStatus\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Playground);\r\n","export const setLocalStorage = (key, player) => {\r\n  localStorage.setItem(key, JSON.stringify(player));\r\n};\r\nexport const getLocalStorage = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n","import React from 'react';\r\nimport {getLocalStorage} from '../../utils';\r\nimport './ResultTable.css';\r\n\r\nconst ResultTable = () => {\r\n  const formingTableRows = () => {\r\n    const players = getLocalStorage('players');\r\n    return players.map((player, index) => (\r\n      <tr>\r\n        <th scope=\"row\">{index}</th>\r\n        <td>{player.nickname}</td>\r\n        <td>{player.points}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <div className=\"results\">\r\n      <h2>results</h2>\r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Nickname</th>\r\n            <th>Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{formingTableRows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultTable;\r\n","import React from 'react';\r\nimport Playground from './Playground/Playground';\r\nimport ResultTable from './ResultTable/ResultTable';\r\nimport './Main.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Main = (props) => {\r\n  return <div className=\"main\">{props.mainContent ? <Playground /> : <ResultTable />}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    mainContent: state.mainContent\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {gameReset} from '../redux/actions';\r\nimport {getLocalStorage, setLocalStorage} from '../utils';\r\nimport './Modal.css';\r\n\r\nconst Modal = (props) => {\r\n  const [state, setState] = useState({nickname: ''});\r\n\r\n  const onChangeNickname = (e) => {\r\n    const nickname = e.target.value;\r\n    setState((prevState) => ({...prevState, nickname}));\r\n  };\r\n\r\n  const onSavePlayer = () => {\r\n    // TODO: bug fix repetitions\r\n    const prevLocalStorage = getLocalStorage('players') || [];\r\n    const player = {nickname: state.nickname, points: props.points};\r\n    prevLocalStorage.push(player);\r\n    setLocalStorage('players', prevLocalStorage);\r\n    onModalClose();\r\n  };\r\n\r\n  const onModalClose = () => {\r\n    props.gameReset({points: 0, isModalOpen: false});\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\" id=\"exampleModalCentered\" role=\"dialog\">\r\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalCenteredLabel\">\r\n              Player\r\n            </h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={onModalClose}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"formGroupExampleInput\">Enter your nickname</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"formGroupExampleInput\"\r\n                  placeholder=\"Your nickname\"\r\n                  onChange={onChangeNickname}\r\n                  value={state.nickname}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={onModalClose}>\r\n              Close\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={onSavePlayer}>\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    points: state.points\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = {\r\n  gameReset\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Modal);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Modal from '../Modal/Modal';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction App(props) {\r\n  console.log(props.isModalOpen);\r\n  return (\r\n    <div className=\"App container\">\r\n      {props.isModalOpen && <Modal />}\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.isModalOpen\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import {\r\n  POINT_INCREASE,\r\n  GAME_STATUS,\r\n  TIME_LEFT,\r\n  GAME_RESET,\r\n  GAME_PLAYER,\r\n  MODAL_OPEN_STATUS,\r\n  CHANGE_MAIN_CONTENT\r\n} from './types';\r\n\r\nconst initialState = {\r\n  isGameStarted: false,\r\n  points: 0,\r\n  time: 60,\r\n  player: '',\r\n  isModalOpen: false,\r\n  mainContent: true\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TIME_LEFT:\r\n      return {...state, time: action.data.time};\r\n    case POINT_INCREASE:\r\n      return {...state, points: action.data.points};\r\n    case GAME_STATUS:\r\n      return {...state, isGameStarted: action.data.isGameStarted};\r\n    case GAME_RESET:\r\n      return {...state, ...action.data};\r\n    case GAME_PLAYER:\r\n      return {...state, player: action.data.player};\r\n    case MODAL_OPEN_STATUS:\r\n      return {...state, isModalOpen: action.data.isModalOpen};\r\n    case CHANGE_MAIN_CONTENT:\r\n      return {...state, mainContent: action.data.mainContent};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {rootReducer} from './redux/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}