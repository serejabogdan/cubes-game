{"version":3,"sources":["redux/types.js","redux/actions.js","Header/ControlButtons/Button/Button.js","Header/ControlButtons/ControlButtons.js","Header/Header.js","Main/Playground/Playground.js","utils.js","Main/ResultTable/ResultTable.js","Main/Main.js","Modal/Modal.js","App/App.js","redux/rootReducer.js","index.js"],"names":["GAME_STATUS","POINT_INCREASE","TIME_UPDATE","GAME_RESET","GAME_PLAYER","MODAL_OPEN_STATUS","CHANGE_MAIN_CONTENT","gameReset","data","type","Button","children","onClick","className","controlButtonsSwitch","props","isGamePaused","onStartGame","isGameStarted","onPause","onNewGame","isMainContent","onMainContent","ControlButtons","Header","interval","this","gameStatus","mainContent","setInterval","tick","points","timeLeft","timerStop","clearInterval","clear","timeUpdate","isModalOpen","value","changeMainContent","timeUpdateOutput","React","Component","mapDispatchToProps","modalOpenStatus","connect","state","Playground","cubes","playground","createRef","generateCubes","setState","prevState","amountCubes","i","colorCube","getRgbColorStyle","cubeKey","getReactKey","push","cube","getCube","colorCubeSum","Object","values","reduce","previous","current","getRandom","cubeSize","width","offsetWidth","height","offsetHeight","r","g","b","getPlaygroundSizes","cubeStyles","left","top","background","style","onDeleteCube","generateNewCubes","score–°alculation","pointIncrease","filter","Math","floor","random","minCubes","maxCubes","length","amountNewCubes","getAmountNewCubes","newCubes","concat","ref","map","mapDispatchToState","getLocalStorage","key","JSON","parse","localStorage","getItem","ResultTable","players","sort","prev","next","player","index","scope","nickname","formingTableRows","Modal","onChangeNickname","e","target","onSavePlayer","gamePlayer","prevLocalStorage","setItem","stringify","setLocalStorage","onModalClose","id","role","aria-hidden","htmlFor","placeholder","onChange","initialState","store","createStore","action","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1387b7aa.chunk.js","sourcesContent":["export const GAME_STATUS = 'GAME_STATUS';\r\nexport const POINT_INCREASE = 'POINT_INCREASE';\r\nexport const TIME_UPDATE = 'TIME_UPDATE';\r\nexport const GAME_RESET = 'GAME_RESET';\r\nexport const GAME_PLAYER = 'GAME_PLAYER';\r\nexport const MODAL_OPEN_STATUS = 'MODAL_OPEN_STATUS';\r\nexport const CHANGE_MAIN_CONTENT = 'CHANGE_MAIN_CONTENT';\r\n","import {\r\n  GAME_STATUS,\r\n  POINT_INCREASE,\r\n  GAME_RESET,\r\n  TIME_UPDATE,\r\n  GAME_PLAYER,\r\n  MODAL_OPEN_STATUS,\r\n  CHANGE_MAIN_CONTENT\r\n} from './types';\r\n\r\nexport function gameStatus(data) {\r\n  return {\r\n    type: GAME_STATUS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function pointIncrease(data) {\r\n  return {\r\n    type: POINT_INCREASE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function timeUpdate(data) {\r\n  return {\r\n    type: TIME_UPDATE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function gameReset(data) {\r\n  return {\r\n    type: GAME_RESET,\r\n    data\r\n  };\r\n}\r\n\r\nexport function gamePlayer(data) {\r\n  return {\r\n    type: GAME_PLAYER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function modalOpenStatus(data) {\r\n  return {\r\n    type: MODAL_OPEN_STATUS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function changeMainContent(data) {\r\n  return {\r\n    type: CHANGE_MAIN_CONTENT,\r\n    data\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({children = 'Button', onClick = () => {}, className = 'btn btn-primary'}) => {\r\n  return (\r\n    <button type=\"button\" className={className} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button/Button';\r\nimport './ControlButtons.css';\r\n\r\nfunction controlButtonsSwitch(props) {\r\n  if (props.isGamePaused) {\r\n    return <Button onClick={props.onStartGame}>Unpause</Button>;\r\n  } else if (props.isGameStarted) {\r\n    return (\r\n      <>\r\n        <Button onClick={props.onPause}>Pause</Button>\r\n        <Button onClick={props.onNewGame}>New game</Button>\r\n      </>\r\n    );\r\n  } else if (!props.isGameStarted) {\r\n    return (\r\n      <>\r\n        <Button onClick={props.onStartGame}>Start</Button>\r\n        {props.isMainContent ? (\r\n          <Button onClick={() => props.onMainContent(false)}>Result</Button>\r\n        ) : (\r\n          <Button onClick={() => props.onMainContent(true)}>Game</Button>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst ControlButtons = (props) => {\r\n  return <div className=\"control-buttons\">{controlButtonsSwitch(props)}</div>;\r\n};\r\n\r\nexport default ControlButtons;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {gameStatus, gameReset, timeUpdate, modalOpenStatus, changeMainContent} from '../redux/actions';\r\nimport ControlButtons from './ControlButtons/ControlButtons';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.interval = null;\r\n  }\r\n  onStartGame() {\r\n    this.props.gameStatus({mainContent: true, isGameStarted: true, isGamePaused: false});\r\n    const oneSecond = 1000;\r\n    if (!this.interval) {\r\n      this.interval = setInterval(() => this.tick(), oneSecond);\r\n    }\r\n  }\r\n\r\n  onNewGame() {\r\n    const gameReset = {\r\n      points: 0,\r\n      timeLeft: 60\r\n    };\r\n    this.props.gameReset(gameReset);\r\n  }\r\n\r\n  onPause() {\r\n    this.props.gameStatus({isGameStarted: false, isGamePaused: true});\r\n    this.timerStop();\r\n  }\r\n\r\n  timerStop() {\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n  }\r\n\r\n  tick() {\r\n    const timeIsUp = this.props.timeLeft <= 0;\r\n    if (timeIsUp) {\r\n      this.clear();\r\n      return;\r\n    }\r\n\r\n    this.props.timeUpdate({timeLeft: this.props.timeLeft - 1});\r\n  }\r\n\r\n  clear() {\r\n    this.props.gameReset({isGameStarted: false, isGamePaused: false, timeLeft: 60, isModalOpen: true});\r\n    this.timerStop();\r\n  }\r\n\r\n  onMainContent(value) {\r\n    this.props.changeMainContent({mainContent: value});\r\n  }\r\n\r\n  timeUpdateOutput() {\r\n    if (this.props.timeLeft > 59) return `01:00`;\r\n    return this.props.timeLeft < 10 ? `00:0${this.props.timeLeft}` : `00:${this.props.timeLeft}`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Cubes game</h1>\r\n        <div className=\"header__game-controls\">\r\n          <ControlButtons\r\n            onStartGame={() => this.onStartGame()}\r\n            onNewGame={() => this.onNewGame()}\r\n            onPause={() => this.onPause()}\r\n            onMainContent={(value) => this.onMainContent(value)}\r\n            isMainContent={this.props.mainContent}\r\n            isGameStarted={this.props.isGameStarted}\r\n            isGamePaused={this.props.isGamePaused}\r\n          />\r\n          <div className=\"header__game-info info\">\r\n            <div className=\"info__points\">\r\n              <span>Points</span>\r\n              <div className=\"info__output form-control\">{this.props.points}</div>\r\n            </div>\r\n            <div className=\"info__time\">\r\n              <span>Time left</span>\r\n              <div className=\"info__output form-control\">{this.timeUpdateOutput()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  gameStatus,\r\n  gameReset,\r\n  timeUpdate,\r\n  modalOpenStatus,\r\n  changeMainContent\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport './Playground.css';\r\nimport {connect} from 'react-redux';\r\nimport {pointIncrease} from '../../redux/actions';\r\n\r\nclass Playground extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cubes: []\r\n    };\r\n\r\n    this.playground = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cubes = this.generateCubes();\r\n    this.setState((prevState) => ({...prevState, cubes}));\r\n  }\r\n\r\n  generateCubes(amountCubes = 6) {\r\n    let cubes = [];\r\n    for (let i = 0; i < amountCubes; i++) {\r\n      const colorCube = this.getRgbColorStyle();\r\n      const cubeKey = this.getReactKey(colorCube);\r\n      cubes.push({cubeKey, cube: this.getCube(colorCube, cubeKey)});\r\n    }\r\n    return cubes;\r\n  }\r\n\r\n  getReactKey(colorCube) {\r\n    const colorCubeValues = Object.values(colorCube);\r\n    let colorCubeSum = colorCubeValues.reduce((previous, current) => previous + current, 0);\r\n    return (colorCubeSum += this.getRandom(colorCubeSum));\r\n  }\r\n\r\n  getPlaygroundSizes(cubeSize = 40) {\r\n    return {\r\n      width: this.playground.current.offsetWidth - cubeSize,\r\n      height: this.playground.current.offsetHeight - cubeSize\r\n    };\r\n  }\r\n\r\n  getCube({r, g, b}, cubeKey) {\r\n    const {width, height} = this.getPlaygroundSizes();\r\n    const cubeStyles = {\r\n      left: this.getRandom(width),\r\n      top: this.getRandom(height),\r\n      background: `rgb(${r}, ${g}, ${b})`\r\n    };\r\n    return (\r\n      <div\r\n        key={cubeKey}\r\n        className=\"cube\"\r\n        style={cubeStyles}\r\n        onClick={() => {\r\n          this.onDeleteCube(cubeKey);\r\n          this.generateNewCubes();\r\n          this.score–°alculation();\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n  score–°alculation() {\r\n    this.props.pointIncrease({points: this.props.points + 1});\r\n  }\r\n\r\n  onDeleteCube(cubeKey) {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      cubes: prevState.cubes.filter((cube) => cube.cubeKey !== cubeKey)\r\n    }));\r\n  }\r\n\r\n  getRgbColorStyle() {\r\n    const rgbMax = 255;\r\n    const rgb = {\r\n      r: this.getRandom(rgbMax),\r\n      g: this.getRandom(rgbMax),\r\n      b: this.getRandom(rgbMax)\r\n    };\r\n    return rgb;\r\n  }\r\n\r\n  getRandom(value) {\r\n    return Math.floor(Math.random() * value);\r\n  }\r\n\r\n  getAmountNewCubes(minCubes = 1, maxCubes = 3) {\r\n    return Math.floor(Math.random() * maxCubes + minCubes);\r\n  }\r\n\r\n  generateNewCubes() {\r\n    const amountCubes = this.state.cubes.length;\r\n    const isEnoughCubes = amountCubes > 3;\r\n    if (isEnoughCubes) {\r\n      return;\r\n    }\r\n\r\n    const amountNewCubes = this.getAmountNewCubes(1, 3);\r\n\r\n    const newCubes = this.generateCubes(amountNewCubes);\r\n    this.setState((prevState) => ({...prevState, cubes: newCubes.concat(prevState.cubes)}));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"playground\" ref={this.playground}>\r\n        {this.props.isGameStarted && this.state.cubes.map((cube) => cube.cube)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isGameStarted: state.isGameStarted,\r\n    points: state.points\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = {\r\n  pointIncrease\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Playground);\r\n","export const setLocalStorage = (key, player) => {\r\n  localStorage.setItem(key, JSON.stringify(player));\r\n};\r\nexport const getLocalStorage = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n","import React from 'react';\r\nimport {getLocalStorage} from '../../utils';\r\nimport './ResultTable.css';\r\n\r\nconst ResultTable = () => {\r\n  const formingTableRows = () => {\r\n    const players = getLocalStorage('players') || [];\r\n    players.sort((prev, next) => next.points - prev.points);\r\n    return players.map((player, index) => (\r\n      <tr key={`${player.nickname}${index}`}>\r\n        <th scope=\"row\">{index + 1}</th>\r\n        <td>{player.nickname}</td>\r\n        <td>{player.points}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      <h2>results</h2>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Nickname</th>\r\n            <th>Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{formingTableRows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultTable;\r\n","import React from 'react';\r\nimport Playground from './Playground/Playground';\r\nimport ResultTable from './ResultTable/ResultTable';\r\nimport './Main.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Main = (props) => {\r\n  return <div className=\"main\">{props.mainContent ? <Playground /> : <ResultTable />}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    mainContent: state.mainContent\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {gameReset, gamePlayer} from '../redux/actions';\r\nimport {getLocalStorage, setLocalStorage} from '../utils';\r\nimport './Modal.css';\r\n\r\nimport Button from '../Header/ControlButtons/Button/Button';\r\n\r\nclass Modal extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      nickname: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({nickname: this.props.player});\r\n  }\r\n\r\n  onChangeNickname = (e) => {\r\n    const nickname = e.target.value;\r\n    this.setState((prevState) => ({...prevState, nickname}));\r\n  };\r\n\r\n  onSavePlayer = () => {\r\n    this.props.gamePlayer({player: this.state.nickname});\r\n    const prevLocalStorage = getLocalStorage('players') || [];\r\n    const player = {nickname: this.state.nickname, points: this.props.points};\r\n    prevLocalStorage.push(player);\r\n    setLocalStorage('players', prevLocalStorage);\r\n    this.onModalClose();\r\n  };\r\n\r\n  onModalClose = () => {\r\n    this.props.gameReset({points: 0, isModalOpen: false});\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"exampleModalCentered\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalCenteredLabel\">\r\n                You got {this.props.points} points.\r\n              </h5>\r\n              <Button className=\"close\" onClick={() => this.onModalClose()}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </Button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"formGroupExampleInput\">Enter your nickname</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"formGroupExampleInput\"\r\n                    placeholder=\"Your nickname\"\r\n                    onChange={this.onChangeNickname}\r\n                    value={this.state.nickname}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <Button className=\"btn btn-secondary\" onClick={() => this.onModalClose()}>\r\n                Close\r\n              </Button>\r\n              <Button onClick={() => this.onSavePlayer()}>Save changes</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    points: state.points,\r\n    player: state.player\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = {\r\n  gameReset,\r\n  gamePlayer\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Modal);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Modal from '../Modal/Modal';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App container\">\r\n      {props.isModalOpen && <Modal />}\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.isModalOpen\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import {\r\n  POINT_INCREASE,\r\n  GAME_STATUS,\r\n  TIME_UPDATE,\r\n  GAME_RESET,\r\n  GAME_PLAYER,\r\n  MODAL_OPEN_STATUS,\r\n  CHANGE_MAIN_CONTENT\r\n} from './types';\r\n\r\nconst initialState = {\r\n  isGameStarted: false,\r\n  isGamePaused: false,\r\n  points: 0,\r\n  timeLeft: 60,\r\n  player: '',\r\n  isModalOpen: false,\r\n  mainContent: true\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TIME_UPDATE:\r\n      return {...state, timeLeft: action.data.timeLeft};\r\n    case POINT_INCREASE:\r\n      return {...state, points: action.data.points};\r\n    case GAME_STATUS:\r\n      return {...state, ...action.data};\r\n    case GAME_RESET:\r\n      return {...state, ...action.data};\r\n    case GAME_PLAYER:\r\n      return {...state, player: action.data.player};\r\n    case MODAL_OPEN_STATUS:\r\n      return {...state, isModalOpen: action.data.isModalOpen};\r\n    case CHANGE_MAIN_CONTENT:\r\n      return {...state, mainContent: action.data.mainContent};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {rootReducer} from './redux/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}