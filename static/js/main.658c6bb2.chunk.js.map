{"version":3,"sources":["redux/types.js","redux/actions.js","Header/Header.js","Main/Playground/Playground.js","utils.js","Main/ResultTable/ResultTable.js","Main/Main.js","Modal/Modal.js","App/App.js","redux/rootReducer.js","index.js"],"names":["GAME_STATUS","POINT_INCREASE","TIME_UPDATE","GAME_RESET","GAME_PLAYER","MODAL_OPEN_STATUS","CHANGE_MAIN_CONTENT","gameStatus","data","type","gameReset","Header","interval","this","props","isGameStarted","isGamePaused","setInterval","tick","points","timeLeft","timerStop","clearInterval","clear","timeUpdate","isModalOpen","mainContent","className","onClick","onPause","onNewGame","onStartGame","value","changeMainContent","onMainContent","gameStartButtons","gameOrResults","timeUpdateOutput","React","Component","mapDispatchToProps","modalOpenStatus","connect","state","Playground","cubes","playground","createRef","generateCubes","setState","prevState","amountCubes","i","colorCube","getColorStyle","push","cube","getCube","cubeSize","width","current","offsetWidth","height","offsetHeight","color","getPlaygroundSizes","cubeStyles","left","getRandom","top","backgroundColor","style","onDeleteCube","generateNewCubes","scoreÐ¡alculation","pointIncrease","filter","Math","round","random","minCubes","maxCubes","floor","length","amountNewCubes","getAmountNewCubes","newCubes","concat","ref","map","mapDispatchToState","getLocalStorage","key","JSON","parse","localStorage","getItem","ResultTable","players","sort","prev","next","player","index","scope","nickname","formingTableRows","Modal","onChangeNickname","e","target","onSavePlayer","gamePlayer","prevLocalStorage","setItem","stringify","setLocalStorage","onModalClose","id","role","data-dismiss","aria-label","aria-hidden","htmlFor","placeholder","onChange","initialState","store","createStore","action","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.658c6bb2.chunk.js","sourcesContent":["export const GAME_STATUS = 'GAME_STATUS';\r\nexport const POINT_INCREASE = 'POINT_INCREASE';\r\nexport const TIME_UPDATE = 'TIME_UPDATE';\r\nexport const GAME_RESET = 'GAME_RESET';\r\nexport const GAME_PLAYER = 'GAME_PLAYER';\r\nexport const MODAL_OPEN_STATUS = 'MODAL_OPEN_STATUS';\r\nexport const CHANGE_MAIN_CONTENT = 'CHANGE_MAIN_CONTENT';\r\n","import {\r\n  GAME_STATUS,\r\n  POINT_INCREASE,\r\n  GAME_RESET,\r\n  TIME_UPDATE,\r\n  GAME_PLAYER,\r\n  MODAL_OPEN_STATUS,\r\n  CHANGE_MAIN_CONTENT\r\n} from './types';\r\n\r\nexport function gameStatus(data) {\r\n  return {\r\n    type: GAME_STATUS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function pointIncrease(data) {\r\n  return {\r\n    type: POINT_INCREASE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function timeUpdate(data) {\r\n  return {\r\n    type: TIME_UPDATE,\r\n    data\r\n  };\r\n}\r\n\r\nexport function gameReset(data) {\r\n  return {\r\n    type: GAME_RESET,\r\n    data\r\n  };\r\n}\r\n\r\nexport function gamePlayer(data) {\r\n  return {\r\n    type: GAME_PLAYER,\r\n    data\r\n  };\r\n}\r\n\r\nexport function modalOpenStatus(data) {\r\n  return {\r\n    type: MODAL_OPEN_STATUS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function changeMainContent(data) {\r\n  return {\r\n    type: CHANGE_MAIN_CONTENT,\r\n    data\r\n  };\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {gameStatus, gameReset, timeUpdate, modalOpenStatus, changeMainContent} from '../redux/actions';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.interval = null;\r\n  }\r\n  onStartGame() {\r\n    this.props.gameStatus({isGameStarted: true, isGamePaused: false});\r\n    const oneSecond = 1000;\r\n    if (!this.interval) {\r\n      this.interval = setInterval(() => this.tick(), oneSecond);\r\n    }\r\n  }\r\n\r\n  onNewGame() {\r\n    const gameReset = {\r\n      points: 0,\r\n      timeLeft: 60\r\n    };\r\n    this.props.gameReset(gameReset);\r\n  }\r\n\r\n  onPause() {\r\n    this.props.gameStatus({isGameStarted: false, isGamePaused: true});\r\n    this.timerStop();\r\n  }\r\n\r\n  timerStop() {\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n  }\r\n\r\n  tick() {\r\n    const timeIsUp = this.props.timeLeft <= 0;\r\n    if (timeIsUp) {\r\n      this.clear();\r\n      return;\r\n    }\r\n\r\n    this.props.timeUpdate({timeLeft: this.props.timeLeft - 1});\r\n  }\r\n\r\n  clear() {\r\n    this.props.gameReset({isGameStarted: false, isGamePaused: false, timeLeft: 60, isModalOpen: true});\r\n    this.timerStop();\r\n  }\r\n\r\n  gameStartButtons() {\r\n    if (!this.props.mainContent) return;\r\n    return this.props.isGameStarted ? (\r\n      <>\r\n        <button type=\"button\" className=\"buttons-start btn btn-success\" onClick={() => this.onPause()}>\r\n          Pause\r\n        </button>\r\n        <button type=\"button\" className=\"buttons-new-game btn btn-primary\" onClick={() => this.onNewGame()}>\r\n          New game\r\n        </button>\r\n      </>\r\n    ) : this.props.isGamePaused ? (\r\n      <button type=\"button\" className=\"buttons-new-game btn btn-primary\" onClick={() => this.onStartGame()}>\r\n        Unpause\r\n      </button>\r\n    ) : (\r\n      <button type=\"button\" className=\"buttons-start btn btn-success\" onClick={() => this.onStartGame()}>\r\n        Start\r\n      </button>\r\n    );\r\n  }\r\n\r\n  onMainContent(value) {\r\n    this.props.changeMainContent({mainContent: value});\r\n  }\r\n\r\n  gameOrResults() {\r\n    if (this.props.isGameStarted) return;\r\n    return this.props.mainContent ? (\r\n      <button type=\"button\" className=\"'buttons-start btn btn-success\" onClick={() => this.onMainContent(false)}>\r\n        Results\r\n      </button>\r\n    ) : (\r\n      <button type=\"button\" className=\"buttons-new-game btn btn-primary\" onClick={() => this.onMainContent(true)}>\r\n        Game\r\n      </button>\r\n    );\r\n  }\r\n\r\n  timeUpdateOutput() {\r\n    if (this.props.timeLeft > 59) return `01:00`;\r\n    return this.props.timeLeft < 10 ? `00:0${this.props.timeLeft}` : `00:${this.props.timeLeft}`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Cubes game</h1>\r\n        <div className=\"header__game-control\">\r\n          <div className=\"header__buttons buttons\">\r\n            {this.gameStartButtons()}\r\n            {this.gameOrResults()}\r\n          </div>\r\n          <div className=\"header__game-info info\">\r\n            <div className=\"info__points\">\r\n              <span>Points</span>\r\n              <div className=\"info__output form-control\">{this.props.points}</div>\r\n            </div>\r\n            <div className=\"info__time\">\r\n              <span>Time left</span>\r\n              <div className=\"info__output form-control\">{this.timeUpdateOutput()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  gameStatus,\r\n  gameReset,\r\n  timeUpdate,\r\n  modalOpenStatus,\r\n  changeMainContent\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport './Playground.css';\r\nimport {connect} from 'react-redux';\r\nimport {pointIncrease, gameStatus} from '../../redux/actions';\r\n\r\nclass Playground extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cubes: []\r\n    };\r\n\r\n    this.playground = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cubes = this.generateCubes();\r\n    this.setState((prevState) => ({...prevState, cubes}));\r\n  }\r\n\r\n  generateCubes(amountCubes = 6) {\r\n    let cubes = [];\r\n    for (let i = 0; i < amountCubes; i++) {\r\n      const colorCube = this.getColorStyle();\r\n\r\n      cubes.push({colorCube, cube: this.getCube(colorCube)});\r\n    }\r\n    return cubes;\r\n  }\r\n\r\n  getPlaygroundSizes(cubeSize = 40) {\r\n    return {\r\n      width: this.playground.current.offsetWidth - cubeSize,\r\n      height: this.playground.current.offsetHeight - cubeSize\r\n    };\r\n  }\r\n\r\n  getCube(color) {\r\n    const {width, height} = this.getPlaygroundSizes();\r\n    const cubeStyles = {\r\n      left: this.getRandom(width),\r\n      top: this.getRandom(height),\r\n      backgroundColor: `#${color}`\r\n    };\r\n    return (\r\n      <div\r\n        key={color}\r\n        className=\"cube\"\r\n        style={cubeStyles}\r\n        onClick={() => {\r\n          this.onDeleteCube(color);\r\n          this.generateNewCubes();\r\n          this.scoreÐ¡alculation();\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n  scoreÐ¡alculation() {\r\n    this.props.pointIncrease({points: this.props.points + 1});\r\n  }\r\n\r\n  onDeleteCube(color) {\r\n    this.setState((prevState) => ({...prevState, cubes: prevState.cubes.filter((cube) => cube.colorCube !== color)}));\r\n  }\r\n\r\n  getColorStyle() {\r\n    const sixDigitNumber = 1000000;\r\n    return this.getRandom(sixDigitNumber);\r\n  }\r\n\r\n  getRandom(value) {\r\n    return Math.round(Math.random() * value);\r\n  }\r\n\r\n  getAmountNewCubes(minCubes = 1, maxCubes = 3) {\r\n    return Math.floor(Math.random() * maxCubes + minCubes);\r\n  }\r\n\r\n  generateNewCubes() {\r\n    const amountCubes = this.state.cubes.length;\r\n    const isEnoughCubes = amountCubes > 3;\r\n    if (isEnoughCubes) {\r\n      return;\r\n    }\r\n\r\n    const amountNewCubes = this.getAmountNewCubes(1, 3);\r\n\r\n    const newCubes = this.generateCubes(amountNewCubes);\r\n    this.setState((prevState) => ({...prevState, cubes: newCubes.concat(prevState.cubes)}));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"playground\" ref={this.playground}>\r\n        {this.props.isGameStarted && this.state.cubes.map((cube) => cube.cube)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = {\r\n  pointIncrease,\r\n  gameStatus\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Playground);\r\n","export const setLocalStorage = (key, player) => {\r\n  localStorage.setItem(key, JSON.stringify(player));\r\n};\r\nexport const getLocalStorage = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n","import React from 'react';\r\nimport {getLocalStorage} from '../../utils';\r\nimport './ResultTable.css';\r\n\r\nconst ResultTable = () => {\r\n  const formingTableRows = () => {\r\n    const players = getLocalStorage('players') || [];\r\n    players.sort((prev, next) => next.points - prev.points);\r\n    return players.map((player, index) => (\r\n      <tr key={`${player.nickname}${player.points}`}>\r\n        <th scope=\"row\">{index + 1}</th>\r\n        <td>{player.nickname}</td>\r\n        <td>{player.points}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      <h2>results</h2>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Nickname</th>\r\n            <th>Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{formingTableRows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultTable;\r\n","import React from 'react';\r\nimport Playground from './Playground/Playground';\r\nimport ResultTable from './ResultTable/ResultTable';\r\nimport './Main.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Main = (props) => {\r\n  return <div className=\"main\">{props.mainContent ? <Playground /> : <ResultTable />}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    mainContent: state.mainContent\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {gameReset, gamePlayer} from '../redux/actions';\r\nimport {getLocalStorage, setLocalStorage} from '../utils';\r\nimport './Modal.css';\r\n\r\nclass Modal extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      nickname: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({nickname: this.props.player});\r\n  }\r\n\r\n  onChangeNickname = (e) => {\r\n    const nickname = e.target.value;\r\n    this.setState((prevState) => ({...prevState, nickname}));\r\n  };\r\n\r\n  onSavePlayer = () => {\r\n    this.props.gamePlayer({player: this.state.nickname});\r\n    const prevLocalStorage = getLocalStorage('players') || [];\r\n    const player = {nickname: this.state.nickname, points: this.props.points};\r\n    prevLocalStorage.push(player);\r\n    setLocalStorage('players', prevLocalStorage);\r\n    this.onModalClose();\r\n  };\r\n\r\n  onModalClose = () => {\r\n    this.props.gameReset({points: 0, isModalOpen: false});\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"exampleModalCentered\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalCenteredLabel\">\r\n                You got {this.props.points} points.\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n                onClick={this.onModalClose}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"formGroupExampleInput\">Enter your nickname</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"formGroupExampleInput\"\r\n                    placeholder=\"Your nickname\"\r\n                    onChange={this.onChangeNickname}\r\n                    value={this.state.nickname}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.onModalClose}>\r\n                Close\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSavePlayer}>\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    points: state.points,\r\n    player: state.player\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = {\r\n  gameReset,\r\n  gamePlayer\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Modal);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Modal from '../Modal/Modal';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App container\">\r\n      {props.isModalOpen && <Modal />}\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isModalOpen: state.isModalOpen\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import {\r\n  POINT_INCREASE,\r\n  GAME_STATUS,\r\n  TIME_UPDATE,\r\n  GAME_RESET,\r\n  GAME_PLAYER,\r\n  MODAL_OPEN_STATUS,\r\n  CHANGE_MAIN_CONTENT\r\n} from './types';\r\n\r\nconst initialState = {\r\n  isGameStarted: false,\r\n  isGamePaused: false,\r\n  points: 0,\r\n  timeLeft: 60,\r\n  player: '',\r\n  isModalOpen: false,\r\n  mainContent: true\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TIME_UPDATE:\r\n      return {...state, timeLeft: action.data.timeLeft};\r\n    case POINT_INCREASE:\r\n      return {...state, points: action.data.points};\r\n    case GAME_STATUS:\r\n      return {...state, ...action.data};\r\n    case GAME_RESET:\r\n      return {...state, ...action.data};\r\n    case GAME_PLAYER:\r\n      return {...state, player: action.data.player};\r\n    case MODAL_OPEN_STATUS:\r\n      return {...state, isModalOpen: action.data.isModalOpen};\r\n    case CHANGE_MAIN_CONTENT:\r\n      return {...state, mainContent: action.data.mainContent};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {rootReducer} from './redux/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}